import AuthorParser
import csv
data = []
for line in open('CombinedCurationUnicodeSorted.csv'):
    toAdd = []
    for item in line.encode('utf-8').decode('utf-8').split(','):
        toAdd.append(item.strip())
    toAdd = list(filter(None, toAdd)) #Elimnating empty elements somehow generated by parsing by ','
    for i in range(7-len(toAdd)):
        toAdd.append('NA')
    data.append(toAdd)
print(len(data))
'''''''''
for item in data[0]:
    print(item)
for item in data[1]:
    print(item)
for item in data[308559]:
    print(item)
    #print(line.encode('utf-8'))
#for line in open('CombinedCuration.csv'):
#    print(line)

'''''
def authorSimilarity(n1,n2):
    n1Elements = n1.split('-')
    n2Elements = n2.split('-')
    THRESHOLD = 0.25
    totalLen = len(n1Elements)+len(n2Elements)
    same = len(set(n1Elements)&set(n2Elements))
    if same/totalLen < THRESHOLD:
        return False
    return True
print(data[0])
print(data[0][0])
print(data[0][1])
print(data[0][2])
print(data[1][6])
UNIQUE = 2
USE = 3
AUTHOR = 6


corrected = 0
#Index: 0 stands the headline, 308560 is null

for i in range(2,len(data)-2):
    book = data[i]
    last_book = data[i - 1]
    print(book)
    #Merging id according to names.unique
    if book[UNIQUE]==last_book[UNIQUE]:
        book[USE] = last_book[USE]
        corrected +=1
    #Mergin author names, keeping the longest (most inclusive) name
    if authorSimilarity(book[AUTHOR],last_book[AUTHOR]):
        #New name is included in the longer version
        book[AUTHOR] = last_book[AUTHOR]
        print('Caught')
        print(book[AUTHOR])
        corrected+=1
    #elif last_book[AUTHOR] in book[AUTHOR]:
        #New name is not included - it's longer than the previous version
        #Changing every previous shorter version
     #   j = i
      #  while True:
       #     if data[j-1][AUTHOR] in data[j][AUTHOR]:
        #        data[j - 1][AUTHOR] = data[j][AUTHOR]
         #       corrected +=1
          #      j-=1
           # else:
            #    break
print(data[0])
print(data[1])

#print(corrected) #Report number of correction
#for book in data:
#    print(book)
#for book in data:
#    for i in range(len(book)):
#        book[i]=book[i].decode('utf-8')
print(data[0])
print(data[1])
print(data[10][AUTHOR])
print(data[11][AUTHOR])
print(data[101][AUTHOR])
data[0].insert(0,'Index')
print(corrected)
import csv
with open('FinalCurationPipeTest.csv','w') as f:
    writer = csv.writer(f)
    writer.writerows(data)

